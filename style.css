/* Add styles here */@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: 'Inter', Arial, Helvetica, sans-serif;
  background-image: url('https://img.freepik.com/free-vector/abstract-red-circle-black-background-technology_1142-10293.jpg');
  background-size: cover;
  background-position: center;
  background-attachment: fixed;
}

body::before {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(rgba(0,0,0,0.6), rgba(0,0,0,0.8));
  z-index: -1;
}

@layer base {
  :root {
    --background: 220 40% 5%; /* Dark Blue/Grey */
    --foreground: 210 30% 92%; /* Light Grey/Blue */

    --card: 220 30% 10%;
    --card-foreground: 210 30% 92%;

    --popover: 220 30% 8%;
    --popover-foreground: 210 30% 92%;

    --primary: 180 100% 50%; /* Neon Cyan */
    --primary-foreground: 220 40% 5%; /* Dark for text on cyan */

    --secondary: 210 20% 20%; /* Darker shade for secondary elements */
    --secondary-foreground: 210 30% 85%;

    --muted: 210 20% 15%;
    --muted-foreground: 210 20% 65%;

    --accent: 260 70% 65%; /* A vibrant, slightly softer purple: HSL(260, 70%, 65%) */
    --accent-foreground: 220 40% 10%; /* Darker, slightly blueish grey for text on new accent */
    
    --purple-accent: 270 80% 60%; /* Neon Purple for specific accents */
    --purple-accent-foreground: 210 30% 92%;

    --destructive: 0 100% 55%; /* Neon Red */
    --destructive-foreground: 210 30% 92%;

    --border: 180 50% 30%; /* Dim Cyan/Blue border */
    --input: 220 30% 12%; /* Darker input background */
    --ring: 180 100% 50%; /* Neon Cyan for focus rings */

    --radius: 0.5rem;

    /* Custom variables for MathVerse AI */
    --header-background: linear-gradient(to bottom, hsla(var(--background) / 0.5), hsla(var(--background) / 0.8));
    --panel-background: linear-gradient(to bottom, hsla(var(--background) / 0.7), hsla(var(--background) / 0.9));
    --btn-neon-shadow-cyan: 0 0 5px hsl(var(--primary)), 0 0 10px hsl(var(--primary)), 0 0 15px hsl(var(--primary));
    --btn-neon-shadow-accent: 0 0 5px hsl(var(--accent)), 0 0 10px hsl(var(--accent)), 0 0 15px hsl(var(--accent));
    --btn-neon-shadow-purple: 0 0 5px hsl(var(--purple-accent)), 0 0 10px hsl(var(--purple-accent)), 0 0 15px hsl(var(--purple-accent));
    --btn-neon-shadow-red: 0 0 5px hsl(var(--destructive)), 0 0 10px hsl(var(--destructive)), 0 0 15px hsl(var(--destructive));
    --btn-neon-shadow-green: 0 0 5px hsl(120 100% 50%), 0 0 10px hsl(120 100% 50%), 0 0 15px hsl(120 100% 50%);


    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
  }
}

@layer base {
  * {
    border-color: hsl(var(--border)); /* Simplified from @apply border-border */
  }
  body {
    background-color: hsl(var(--background)); /* Simplified from @apply bg-background */
    color: hsl(var(--foreground)); /* Simplified from @apply text-foreground */
    min-height: 100vh;
    overflow-x: hidden; /* Prevent horizontal scroll due to sliding panels */
  }
}

/* For MathJax rendering */
mjx-container[jax="CHTML"][display="true"] {
  display: block;
  overflow-x: auto;
  overflow-y: hidden;
  padding-top: 0.5rem; /* py-2 */
  padding-bottom: 0.5rem; /* py-2 */
}
mjx-container[jax="CHTML"][display="false"] {
  display: inline-block;
}

/* Custom scrollbar for webkit browsers */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}
::-webkit-scrollbar-track {
  background: hsl(var(--background) / 0.5);
  border-radius: 10px;
}
::-webkit-scrollbar-thumb {
  background: hsl(var(--primary) / 0.6);
  border-radius: 10px;
}
::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--primary) / 0.8);
}

/* Selection color */
::selection {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}

/* Neon button styles - ensure these use the correct CSS variables */
.neon-button {
  transition: box-shadow 0.3s ease-in-out, transform 0.1s ease-in-out;
}
.neon-button:hover {
  transform: scale(1.05);
}
.neon-button:active {
  transform: scale(0.95);
}

.neon-button-primary {
  box-shadow: var(--btn-neon-shadow-cyan);
}
.neon-button-accent { 
  box-shadow: var(--btn-neon-shadow-accent);
}
.neon-button-purple {
  box-shadow: var(--btn-neon-shadow-purple);
}
.neon-button-destructive {
  box-shadow: var(--btn-neon-shadow-red);
}
.neon-button-green {
  box-shadow: var(--btn-neon-shadow-green);
}

/* Smaller neon effects for specific buttons like calculator controls */
.neon-button-destructive-sm {
  box-shadow: 0 0 3px hsl(var(--destructive)), 0 0 6px hsl(var(--destructive));
}
.neon-button-accent-sm { 
  box-shadow: 0 0 3px hsl(var(--accent)), 0 0 6px hsl(var(--accent));
}
.neon-button-purple-calc { /* Calculator specific neon styles */
   box-shadow: 0 0 3px hsl(var(--purple-accent)), 0 0 6px hsl(var(--purple-accent));
}
.neon-button-green-calc {
   box-shadow: 0 0 3px hsl(120 100% 50%), 0 0 6px hsl(120 100% 50%);
}
.neon-button-destructive-calc {
   box-shadow: 0 0 3px hsl(var(--destructive)), 0 0 6px hsl(var(--destructive));
}

/* Keyframes from tailwind.config.ts */
@keyframes accordion-down {
  from { height: 0; }
  to { height: var(--radix-accordion-content-height); } /* This variable needs to be handled by JS if Radix isn't used */
}
@keyframes accordion-up {
  from { height: var(--radix-accordion-content-height); } /* This variable needs to be handled by JS if Radix isn't used */
  to { height: 0; }
}
@keyframes fadeIn {
  '0%': { opacity: 0; transform: translateY(10px); }
  '100%': { opacity: 1; transform: translateY(0); }
}
@keyframes bounce {
  '0%, 100%': { transform: translateY(-25%); animation-timing-function: cubic-bezier(0.8,0,1,1); }
  '50%': { transform: translateY(0); animation-timing-function: cubic-bezier(0,0,0.2,1); }
}

/* Animation classes (if not using Tailwind JIT CDN) */
.animate-fadeIn {
  animation: fadeIn 0.3s ease-out forwards;
}
.animate-bounce {
  animation: bounce 1s infinite;
}

/* Basic Prose styles for chat messages (simplified from @tailwindcss/typography) */
.prose {
  color: inherit; /* Inherit color from parent */
  max-width: 65ch;
}
.prose p {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.prose strong {
  font-weight: 600;
}
.prose code {
  font-family: monospace;
  background-color: rgba(128,128,128,0.1); /* muted-foreground like */
  padding: 0.1em 0.3em;
  border-radius: 0.25em;
}
.prose pre {
  background-color: rgba(128,128,128,0.1);
  padding: 1em;
  border-radius: 0.25em;
  overflow-x: auto;
}
.prose pre code {
  background-color: transparent;
  padding: 0;
}
.prose ul, .prose ol {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em;
}
.prose ul { list-style-type: disc; }
.prose ol { list-style-type: decimal; }
.prose li { margin-top: 0.5em; margin-bottom: 0.5em; }
.prose a { color: hsl(var(--primary)); text-decoration: underline; }
.prose h1, .prose h2, .prose h3, .prose h4 { font-weight: 600; margin-top: 1.2em; margin-bottom: 0.5em;}
.prose h1 { font-size: 1.875rem; } /* text-3xl */
.prose h2 { font-size: 1.5rem; }    /* text-2xl */
.prose h3 { font-size: 1.25rem; }   /* text-xl */
.prose h4 { font-size: 1.125rem; }  /* text-lg */

/* Utility classes (some common ones used, for full Tailwind, use CDN or compile) */
.flex { display: flex; }
.flex-col { flex-direction: column; }
.flex-1 { flex: 1 1 0%; }
.items-center { align-items: center; }
.items-end { align-items: flex-end; }
.justify-between { justify-content: space-between; }
.justify-center { justify-content: center; }
.justify-start { justify-content: flex-start; }
.gap-1 { gap: 0.25rem; }
.gap-2 { gap: 0.5rem; }
.gap-3 { gap: 0.75rem; }
.gap-4 { gap: 1rem; }
.space-y-1 > :not([hidden]) ~ :not([hidden]) { margin-top: 0.25rem; margin-bottom: 0.25rem; }
.space-y-2 > :not([hidden]) ~ :not([hidden]) { margin-top: 0.5rem; margin-bottom: 0.5rem; }
.space-y-3 > :not([hidden]) ~ :not([hidden]) { margin-top: 0.75rem; margin-bottom: 0.75rem; }
.space-y-4 > :not([hidden]) ~ :not([hidden]) { margin-top: 1rem; margin-bottom: 1rem; }

.h-screen { height: 100vh; }
.h-full { height: 100%; }
.w-full { width: 100%; }
.w-\[280px\] { width: 280px; }
.md\:w-\[400px\] { 
    @media (min-width: 768px) { width: 400px; }
}
.max-w-\[900px\] { max-width: 900px; }

.fixed { position: fixed; }
.relative { position: relative; }
.absolute { position: absolute; }
.top-0 { top: 0; }
.left-0 { left: 0; }
.right-0 { right: 0; }
.right-2 { right: 0.5rem; }
.top-\[60px\] { top: 60px; }
.top-\[65px\] { top: 65px; }
.pt-\[60px\] { padding-top: 60px; }
.md\:pt-0 { @media (min-width: 768px) { padding-top: 0; } }
.md\:mt-\[60px\] { @media (min-width: 768px) { margin-top: 60px; } }


.overflow-hidden { overflow: hidden; }
.overflow-y-auto { overflow-y: auto; }
.overflow-x-auto { overflow-x: auto; }

.z-30 { z-index: 30; }
.z-40 { z-index: 40; }
.z-50 { z-index: 50; }
.z-\[100\] { z-index: 100; }


.bg-background { background-color: hsl(var(--background)); }
.bg-input { background-color: hsl(var(--input)); }
.text-foreground { color: hsl(var(--foreground)); }
.text-primary { color: hsl(var(--primary)); }
.text-primary-foreground { color: hsl(var(--primary-foreground)); }
.text-accent-foreground { color: hsl(var(--accent-foreground)); }
.text-destructive-foreground { color: hsl(var(--destructive-foreground)); }
.text-muted-foreground { color: hsl(var(--muted-foreground)); }
.bg-primary { background-color: hsl(var(--primary)); }
.hover\:bg-primary\/90:hover { background-color: hsla(var(--primary), 0.9); }
.bg-destructive { background-color: hsl(var(--destructive)); }
.hover\:bg-destructive\/90:hover { background-color: hsla(var(--destructive), 0.9); }
.bg-accent { background-color: hsl(var(--accent)); }
.hover\:bg-accent:hover { background-color: hsl(var(--accent)); }
.hover\:text-accent-foreground:hover { color: hsl(var(--accent-foreground)); }
.bg-secondary { background-color: hsl(var(--secondary)); }
.hover\:bg-secondary\/80:hover { background-color: hsla(var(--secondary), 0.8); }


.border { border-width: 1px; }
.border-b { border-bottom-width: 1px; }
.border-l-2 { border-left-width: 2px; }
.border-input { border-color: hsl(var(--input)); }
.border-border { border-color: hsl(var(--border)); }
.border-primary { border-color: hsl(var(--primary)); }
.border-purple-accent { border-color: hsl(var(--purple-accent)); }
.text-purple-accent { color: hsl(var(--purple-accent)); }
.hover\:bg-purple-accent\/10:hover { background-color: hsla(var(--purple-accent), 0.1); }
.hover\:bg-purple-accent\/20:hover { background-color: hsla(var(--purple-accent), 0.2); }


.rounded-md { border-radius: var(--radius); }
.rounded-lg { border-radius: var(--radius); } /* Simplified, was lg var */
.rounded-full { border-radius: 9999px; }
.rounded-br-none { border-bottom-right-radius: 0; }
.rounded-bl-none { border-bottom-left-radius: 0; }

.shadow-md { box-shadow: 0 4px 6px -1px rgba(0,0,0,0.1), 0 2px 4px -1px rgba(0,0,0,0.06); }
.shadow-lg { box-shadow: 0 10px 15px -3px rgba(0,0,0,0.1), 0 4px 6px -2px rgba(0,0,0,0.05); }
.shadow-xl { box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1); }


.p-2 { padding: 0.5rem; }
.p-3 { padding: 0.75rem; }
.p-4 { padding: 1rem; }
.px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
.px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }
.px-4 { padding-left: 1rem; padding-right: 1rem; }
.py-1 { padding-top: 0.25rem; padding-bottom: 0.25rem; }
.py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; }
.py-3 { padding-top: 0.75rem; padding-bottom: 0.75rem; }

.m-1 { margin: 0.25rem; }
.mr-1 { margin-right: 0.25rem; }
.mr-2 { margin-right: 0.5rem; }
.ml-1 { margin-left: 0.25rem; }
.ml-4 { margin-left: 1rem; }
.mt-1\.5 { margin-top: 0.375rem; }


.text-xs { font-size: 0.75rem; line-height: 1rem; }
.text-sm { font-size: 0.875rem; line-height: 1.25rem; }
.text-base { font-size: 1rem; line-height: 1.5rem; }
.text-lg { font-size: 1.125rem; line-height: 1.75rem; }
.text-xl { font-size: 1.25rem; line-height: 1.75rem; }
.text-2xl { font-size: 1.5rem; line-height: 2rem; }
.font-semibold { font-weight: 600; }
.font-medium { font-weight: 500; }
.font-mono { font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; }


.transition-transform { transition-property: transform; }
.transition-all { transition-property: all; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.duration-300 { transition-duration: 300ms; }
.ease-in-out { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }
.transform { transform: translateX(0) translateY(0) rotate(0) skewX(0) skewY(0) scaleX(1) scaleY(1); }
.hover\:scale-105:hover { transform: scale(1.05); }
.active\:scale-95:active { transform: scale(0.95); }
.-translate-x-full { transform: translateX(-100%); }
.translate-x-full { transform: translateX(100%); }
.translate-x-0 { transform: translateX(0); }


.md\:hidden { @media (min-width: 768px) { display: none; } }
.hidden { display: none; }
.md\:flex { @media (min-width: 768px) { display: flex; } }
.md\:ml-\[280px\] { @media (min-width: 768px) { margin-left: 280px; } }
.md\:mr-\[400px\] { @media (min-width: 768px) { margin-right: 400px; } }
.md\:relative { @media (min-width: 768px) { position: relative; } }
.md\:translate-x-0 { @media (min-width: 768px) { transform: translateX(0); } }


.bg-black\/50 { background-color: rgba(0,0,0,0.5); }
.bg-background\/30 { background-color: hsla(var(--background), 0.3); }
.bg-background\/50 { background-color: hsla(var(--background), 0.5); }
.backdrop-blur-sm { backdrop-filter: blur(4px); }
.backdrop-blur-md { backdrop-filter: blur(12px); }

.italic { font-style: italic; }
.opacity-50 { opacity: 0.5; }

/* Scrollbar utilities (if not using tailwind-scrollbar plugin directly in JS-controlled elements) */
.scrollbar-thin::-webkit-scrollbar { width: 8px; height: 8px; }
.scrollbar-thin::-webkit-scrollbar-track { background: hsl(var(--background) / 0.5); border-radius: 10px; }
.scrollbar-thin::-webkit-scrollbar-thumb { background: hsl(var(--primary) / 0.6); border-radius: 10px; }
.scrollbar-thin::-webkit-scrollbar-thumb:hover { background: hsl(var(--primary) / 0.8); }

.placeholder\:text-muted-foreground::placeholder { color: hsl(var(--muted-foreground)); }
.focus\:ring-primary:focus { --tw-ring-color: hsl(var(--primary)); box-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color); } /* Simplified focus ring */
.focus\:border-primary:focus { border-color: hsl(var(--primary)); }


.col-span-1 { grid-column: span 1 / span 1; }
.col-span-2 { grid-column: span 2 / span 2; }
.grid { display: grid; }
.grid-cols-5 { grid-template-columns: repeat(5, minmax(0, 1fr)); }

.break-words { overflow-wrap: break-word; }
.whitespace-nowrap { white-space: nowrap; }
.self-start { align-self: flex-start; }
.max-w-\[75\%\] { max-width: 75%; }

/* For chat message styling based on role */
.chat-message-user {
    background-color: hsl(var(--primary));
    color: hsl(var(--primary-foreground));
    border-bottom-right-radius: 0;
}
.chat-message-assistant {
    background-color: hsl(var(--accent)); 
    color: hsl(var(--accent-foreground)); 
    border-bottom-left-radius: 0;
}

.chat-message-typing {
    background-color: hsl(var(--card));
    color: hsl(var(--card-foreground));
    border: 1px solid hsl(var(--border));
    border-bottom-left-radius: 0;
}
.chat-message-typing .dot {
    height: 0.5rem; /* h-2 */
    width: 0.5rem; /* w-2 */
    background-color: hsl(var(--muted-foreground));
    border-radius: 9999px; /* rounded-full */
    animation: bounce 1s infinite;
}
.chat-message-typing .dot:nth-child(1) { animation-delay: -0.3s; }
.chat-message-typing .dot:nth-child(2) { animation-delay: -0.15s; }

/* Toast Styling */
.toast {
    position: relative;
    display: flex;
    width: 100%;
    align-items: center;
    justify-content: space-between;
    overflow: hidden;
    border-radius: 0.375rem; /* rounded-md */
    border-width: 1px;
    padding: 1.5rem; /* p-6 */
    box-shadow: 0 10px 15px -3px rgba(0,0,0,0.1), 0 4px 6px -2px rgba(0,0,0,0.05); /* shadow-lg */
    transition-property: all;
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    animation: fadeIn 0.3s ease-out; /* Using existing fadeIn */
}
.toast.destructive {
    border-color: hsl(var(--destructive));
    background-color: hsl(var(--destructive));
    color: hsl(var(--destructive-foreground));
}
.toast-title {
    font-size: 0.875rem; /* text-sm */
    font-weight: 600; /* font-semibold */
}
.toast-description {
    font-size: 0.875rem; /* text-sm */
    opacity: 0.9;
}
.toast-close-button {
    position: absolute;
    right: 0.5rem; /* right-2 */
    top: 0.5rem; /* top-2 */
    border-radius: 0.375rem; /* rounded-md */
    padding: 0.25rem; /* p-1 */
    color: hsl(var(--foreground) / 0.5);
    opacity: 0;
    transition-property: opacity;
}
.toast:hover .toast-close-button {
    opacity: 1;
}
.toast-close-button:hover {
    color: hsl(var(--foreground));
}
.toast.destructive .toast-close-button {
    color: hsl(0, 100%, 70%); /* Approximation of red-300 */
}
.toast.destructive .toast-close-button:hover {
    color: hsl(0, 100%, 90%); /* Approximation of red-50 */
}

/* Alert Dialog basic styles (not full ShadCN) */
.alert-dialog-overlay {
    position: fixed;
    inset: 0;
    z-index: 50;
    background-color: rgba(0,0,0,0.8);
    animation: fadeIn 0.2s ease-out;
}
.alert-dialog-content {
    position: fixed;
    left: 50%;
    top: 50%;
    z-index: 50;
    display: grid;
    width: 100%;
    max-width: 32rem; /* max-w-lg */
    transform: translate(-50%, -50%);
    gap: 1rem;
    border-width: 1px;
    background-color: hsl(var(--background));
    padding: 1.5rem; /* p-6 */
    box-shadow: 0 10px 15px -3px rgba(0,0,0,0.1), 0 4px 6px -2px rgba(0,0,0,0.05); /* shadow-lg */
    border-radius: 0.5rem; /* sm:rounded-lg */
    animation: fadeIn 0.2s ease-out, zoomIn 0.2s ease-out; /* Assuming zoomIn keyframes */
}
@keyframes zoomIn { from { transform: translate(-50%, -50%) scale(0.95); } to { transform: translate(-50%, -50%) scale(1); } }

.alert-dialog-header { display: flex; flex-direction: column; gap: 0.5rem; text-align: center; }
@media (min-width: 640px) { .alert-dialog-header { text-align: left; } }
.alert-dialog-title { font-size: 1.125rem; font-weight: 600; } /* text-lg */
.alert-dialog-description { font-size: 0.875rem; color: hsl(var(--muted-foreground)); } /* text-sm */
.alert-dialog-footer { display: flex; flex-direction: column-reverse; }
@media (min-width: 640px) { .alert-dialog-footer { flex-direction: row; justify-content: flex-end; gap: 0.5rem; } }
.alert-dialog-footer button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: 0.375rem; /* rounded-md */
    font-size: 0.875rem; /* text-sm */
    font-weight: 500; /* font-medium */
    padding: 0.5rem 1rem; /* h-10 px-4 py-2 */
    margin-top: 0.5rem;
}
@media (min-width: 640px) { .alert-dialog-footer button { margin-top: 0; } }

.alert-dialog-cancel {
    border: 1px solid hsl(var(--input));
    background-color: hsl(var(--background));
}
.alert-dialog-cancel:hover {
    background-color: hsl(var(--accent));
    color: hsl(var(--accent-foreground));
}
.alert-dialog-action {
    background-color: hsl(var(--primary));
    color: hsl(var(--primary-foreground));
}
.alert-dialog-action:hover {
     background-color: hsla(var(--primary), 0.9);
}
.alert-dialog-action.destructive {
    background-color: hsl(var(--destructive));
    color: hsl(var(--destructive-foreground));
}
.alert-dialog-action.destructive:hover {
    background-color: hsla(var(--destructive), 0.9);
}

/* Lucide icon default styling */
.lucide {
    display: inline-block;
    vertical-align: middle;
}

/* Added from previous tailwind.config.ts */
.text-balance {
  text-wrap: balance;
}
